<?php
namespace TWWForms\Routes;

class TWW_UpdateSubscriptionRoute extends TWW_MemberRoute {
    protected $routes = [
        'update' => [
            'methods' => 'POST',
            'callback' => 'update_subscription',
            'path' => '/update-subscription',
        ]
    ];

    public function boot() {
        $this->register_routes();
    }

    /**
     * Update a subscription
     * Memberpress route: /wp-json/mp/v1/subscriptions/:id
     * 
     * @var $subscr_id  - The Recurring Subscription Number. In order for recurring billings to be tracked, this should be the exact Subscription Number generated by the Payment Gateway for this Subscription.
     * @var $membership - The Membership ID of the Subscription. This should be the ID of the Membership the Subscription is for.
     * @var $status - The Subscription's current billing status. This can be set to "active", "cancelled", "suspended", or "pending"
     * @var $created_at - The date the Subscription was created. This should be in a MySQL datetime format or PHP's date('c') format. All dates stored in the database should be in UTC timezone. 
     * @param \WP_REST_Request $request
     * @return \WP_REST_Response
     */
    public function update_subscription(\WP_REST_Request $request) {
        $params = $request->get_params();
        $data['id'] = $params['memberhip'] ?? null;
        $id = $params['active_subscription_id'] ?? null;
        $member = $params['user_id'] ?? null;
        $membership = $params['active_subscription_product_id'] ?? null;

        $sub = new \MeprSubscription($id);
        $subscr_id = $sub->subscr_id;

        $data = [
            'subscr_id' => $subscr_id,
            'membership' => $membership,
            'status' => 'active',
            'created_at' => date('c')
        ];

        return rest_ensure_response([
            'success' => true,
            'message' => 'Subscription updated',
            'data' => $data
        ]);
    }
}